==========================================
STEP 1 : Construct Authorization Request
==========================================

=> LOGOUT FROM THE ACCOUNT

# In reality Code verifiers must be automatically generated and long
code_verifier = This is a dumb verifier

ENDPOINT   => https://accounts.google.com/o/oauth2/v2/auth
HTTP TYPE  => GET

https://accounts.google.com/o/oauth2/v2/auth?response_type=code&client_id=<CLIENTID>&scope=openid%20https://www.googleapis.com/auth/photoslibrary.readonly&state=state123&redirect_uri=http://localhost:8080&code_challenge=s7wFrWBVcw_zOncLadJr0Ek0OiyGpmuwMzLb5dy5Zvw&code_challenge_method=S256

response_type
client_id
scope
state
redirect_uri
access_type
prompt
code_challenge
code_challenge_method

=> code_challenge = Base64UrlEncode(SHA256Hash(<code verifier>))
=> Use an online PKCE generator tool to do this 

==========================================
STEP 2 : Send Request and extract Code
==========================================

=> Start the Web Server (Optional) 
=> Use Google Chrome to send request and capture the code


==========================================
STEP 3 : Construct a Token Request 
==========================================

ENDPOINT   => 
HTTP TYPE  => 

grant_type
client_id
client_secret
code
redirect_uri
verifier=

==========================================
STEP 4 : Send Request and extract Token
==========================================

=> Note the elements of the id token by using jwt.io


===========================================================
STEP 5 : Construct Google Photos Request - Get All Albums
===========================================================

ENDPOINT   => 
HTTP TYPE  =>  


==========================================
STEP 6 : Send Request and see one Album
==========================================

ENDPOINT   => 
HTTP TYPE  =>  


==========================================
STEP 7 : Send Request to see Album Photos
==========================================

ENDPOINT   => 
HTTP TYPE  =>  


